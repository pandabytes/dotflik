@page "/movies"
@inherits FluxorComponent

<h3>Movies</h3>

<ErrorModal @ref="UnableToFetchErrorModal"
            ModalId="UnableToFetch"
            ErrorTitle="Cannot fetch movies"
            ErrorMessage="Unable to fetch movies. Please try again." />

@if (MoviesState.Value.Movies.Count > 0)
{
  <MovieDetailsModal @ref="MovieDetailsModal" ModalId="movieModal" Movie="m_selectMovie"/>

  @for (int i = 0; i < NumMovieRows; i++)
  { 
    <div class="card-deck" style="margin: 20px 0">
      @foreach (var movie in GetMoviesRange(i * NumMoviesPerRow, NumMoviesPerRow))
      {
        <div class="card">
          <img class="card-img-top" src="@movie.BannerUrl">

          <div class="card-body">
            <h3 class="card-title">@movie.Title</h3>
            <h5 class="card-subtitle">@movie.Year</h5>
            @foreach (var genre in movie.Genres)
            {
              <a href="#" class="badge badge-pill badge-primary" style="margin: 20px 5px;">@genre.Name</a>
            }
          </div>

          <div class="card-footer">
            <small class="text-muted">
              <button class="btn btn-primary" @onclick="e => OpenSelectedMovie(movie)">
                More Info
              </button>
            </small>
          </div>
        </div>
      }
    </div>
  }

  <div class="container">
    <div class="col-md-12 text-center">
      <button type="button" class="btn btn-secondary btn" disabled="@(!LoadMoreMoviesButtonEnable)"
              style="margin: 15px 0;" @onclick="@LoadMoreMoviesButtonClicked">
        @LoadMoreMoviesButtonText
      </button>
    </div>
  </div>

}
else
{
  <Loading></Loading>
}



